// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String   @unique
  password String
  role     UserRole @default(USER)

  order Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ExecutionResult {
  SUCCESS
  FAILURE
}

model ExecutionPerformance {
  id String @id @default(uuid())

  serviceName String
  result      ExecutionResult

  startedAt  DateTime
  finishedAt DateTime
  duration   Int
}

model Product {
  id String @id @default(uuid())

  name        String
  description String
  price       Float
  currency    String
  stock       Int
  unit        String

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  OrderDetail OrderDetail[]
}

model OrderDetail {
  id String @id @default(uuid())

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  quantity Int
  price    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  OrderDetail OrderDetail[]
  User        User?         @relation(fields: [userId], references: [id])
  userId      String?
}

model DomainEvent {
  id          String @id @default(uuid())
  aggregateId String
  eventType   String
  payload     Json
  version     Int

  occurredAt DateTime @default(now())
}
